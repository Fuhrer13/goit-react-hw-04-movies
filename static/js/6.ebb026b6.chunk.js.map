{"version":3,"sources":["../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../src/core/eventManager.ts","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/hooks/useToast.ts","../../src/components/Transitions.tsx","../../src/components/ToastPositioner.tsx","../../src/components/ToastContainer.tsx","../../src/hooks/useToastContainer.ts","../../src/core/toast.tsx","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/classnames/index.js"],"names":["React","createContext","Transition","_React$Component","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","getChildMapping","mapFn","result","Object","create","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","bind","values","obj","k","TransitionGroup","handleExited","self","ReferenceError","_assertThisInitialized","contextValue","firstRender","mounted","currentChildMapping","_extends","component","childFactory","eventManager","list","emitQueue","on","set","off","cb","get","cancelEmit","timers","clearTimeout","emit","args","timer","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","hasToastId","toastId","canUseDom","window","canBeRendered","content","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","duration","appendPosition","collapse","collapseDuration","Array","enterDuration","exitDuration","position","preventExitTransition","done","enterClassName","exitClassName","onCollapseStart","height","style","requestAnimationFrame","collapseToast","CloseButton","closeToast","type","ariaLabel","className","onClick","e","viewBox","fillRule","d","ProgressBar","delay","isRunning","hide","userStyle","controlledProgress","progress","rtl","isIn","animationDuration","animationPlayState","opacity","classNames","cx","animationEvent","Toast","useState","setIsRunning","setPreventExitTransition","toastRef","useRef","drag","useKeeper","start","x","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","autoClose","pauseOnHover","closeOnClick","toast","getX","top","bottom","left","right","pauseToast","playToast","getY","Math","useEffect","document","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","useToast","closeButton","hideProgressBar","transition","bodyClassName","bodyStyle","progressClassName","progressStyle","updateId","role","deleteToast","cssClasses","id","ref","renderCloseButton","Bounce","ToastPositioner","rest","ToastContainer","useReducer","reducer","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","limit","enableMultiContainer","queueLen","freeSlot","dequeueToast","toDequeue","toastContent","toastProps","staleId","appendToast","options","isNotValid","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","pauseOnFocusLoss","draggable","draggablePercent","removeFromCollection","toastToRender","toastList","p","getToastToRender","useToastContainer","swag","pointerEvents","newestOnTop","containers","lazy","isAnyContainerMounted","container","latestInstance","getContainer","generateToastId","Date","getToastId","dispatchToast","containerDomNode","mergeOptions","arg","refresh","action","params","oldOptions","oldContent","nextOptions","containerConfig","containerInstance","item","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","err","o","minLen","n","toString","slice","constructor","name","from","test","TypeError","hasOwn","hasOwnProperty","classes","arguments","argType","inner","apply","join","module","exports","default"],"mappings":";gMAAe,G,MACH,GCAGA,MAAMC,cAAc,MCwG/BC,EAA0B,SAAUC,GAGtC,SAASD,EAAWE,EAAOC,GACzB,IAAIC,EAEJA,EAAQH,EAAiBI,KAAKC,KAAMJ,EAAOC,IAAYG,KACvD,IAGIC,EADAC,EAFcL,MAEuBM,WAAaP,EAAMQ,MAAQR,EAAMM,OAuB1E,OArBAJ,EAAMO,aAAe,KAEjBT,EAAMU,GACJJ,GACFD,EA/GY,SAgHZH,EAAMO,aA/GQ,YAiHdJ,EAhHa,UAoHbA,EADEL,EAAMW,eAAiBX,EAAMY,aAtHhB,YACH,SA4HhBV,EAAMW,MAAQ,CACZC,OAAQT,GAEVH,EAAMa,aAAe,KACdb,EA/BTc,YAAelB,EAAYC,GAkC3BD,EAAWmB,yBAA2B,SAAkCC,EAAMC,GAG5E,OAFaD,EAAKR,IArIC,cAuILS,EAAUL,OACf,CACLA,OAxIY,UA4IT,MAmBT,IAAIM,EAAStB,EAAWuB,UA0OxB,OAxOAD,EAAOE,kBAAoB,WACzBlB,KAAKmB,cAAa,EAAMnB,KAAKK,eAG/BW,EAAOI,mBAAqB,SAA4BC,GACtD,IAAIC,EAAa,KAEjB,GAAID,IAAcrB,KAAKJ,MAAO,CAC5B,IAAIc,EAASV,KAAKS,MAAMC,OAEpBV,KAAKJ,MAAMU,GA1KC,aA2KVI,GA1KS,YA0KcA,IACzBY,EA5KY,yBA+KVZ,GA9KS,YA8KcA,IACzBY,EA9KW,WAmLjBtB,KAAKmB,cAAa,EAAOG,IAG3BN,EAAOO,qBAAuB,WAC5BvB,KAAKwB,sBAGPR,EAAOS,YAAc,WACnB,IACIC,EAAMtB,EAAOF,EADbyB,EAAU3B,KAAKJ,MAAM+B,QAWzB,OATAD,EAAOtB,EAAQF,EAASyB,EAET,MAAXA,GAAsC,kBAAZA,IAC5BD,EAAOC,EAAQD,KACftB,EAAQuB,EAAQvB,MAEhBF,OAA4B0B,IAAnBD,EAAQzB,OAAuByB,EAAQzB,OAASE,GAGpD,CACLsB,KAAMA,EACNtB,MAAOA,EACPF,OAAQA,IAIZc,EAAOG,aAAe,SAAsBU,EAAUP,QACnC,IAAbO,IACFA,GAAW,GAGM,OAAfP,GAEFtB,KAAKwB,qBAtNW,aAwNZF,EACFtB,KAAK8B,aAAaD,GAElB7B,KAAK+B,eAEE/B,KAAKJ,MAAMW,eA9NN,WA8NuBP,KAAKS,MAAMC,QAChDV,KAAKgC,SAAS,CACZtB,OAjOe,eAsOrBM,EAAOc,aAAe,SAAsBD,GAC1C,IAAII,EAASjC,KAETI,EAAQJ,KAAKJ,MAAMQ,MACnB8B,EAAYlC,KAAKH,QAAUG,KAAKH,QAAQM,WAAa0B,EAErDM,EAAQnC,KAAKJ,MAAMwC,QAAU,CAACF,GAAa,CAACG,IAASC,YAAYtC,MAAOkC,GACxEK,EAAYJ,EAAM,GAClBK,EAAiBL,EAAM,GAEvBM,EAAWzC,KAAKyB,cAChBiB,EAAeR,EAAYO,EAASvC,OAASuC,EAASrC,OAGrDyB,IAAazB,GAASuC,EACzB3C,KAAK4C,aAAa,CAChBlC,OAnPa,YAoPZ,WACDuB,EAAOrC,MAAMiD,UAAUN,OAK3BvC,KAAKJ,MAAMkD,QAAQP,EAAWC,GAC9BxC,KAAK4C,aAAa,CAChBlC,OA7PgB,aA8Pf,WACDuB,EAAOrC,MAAMmD,WAAWR,EAAWC,GAEnCP,EAAOe,gBAAgBN,GAAc,WACnCT,EAAOW,aAAa,CAClBlC,OAlQW,YAmQV,WACDuB,EAAOrC,MAAMiD,UAAUN,EAAWC,cAM1CxB,EAAOe,YAAc,WACnB,IAAIkB,EAASjD,KAET0B,EAAO1B,KAAKJ,MAAM8B,KAClBe,EAAWzC,KAAKyB,cAChBc,EAAYvC,KAAKJ,MAAMwC,aAAUR,EAAYS,IAASC,YAAYtC,MAEjE0B,IAAQiB,GASb3C,KAAKJ,MAAMsD,OAAOX,GAClBvC,KAAK4C,aAAa,CAChBlC,OA3Re,YA4Rd,WACDuC,EAAOrD,MAAMuD,UAAUZ,GAEvBU,EAAOD,gBAAgBP,EAASf,MAAM,WACpCuB,EAAOL,aAAa,CAClBlC,OApSU,WAqST,WACDuC,EAAOrD,MAAMwD,SAASb,aAlB1BvC,KAAK4C,aAAa,CAChBlC,OArRY,WAsRX,WACDuC,EAAOrD,MAAMwD,SAASb,OAqB5BvB,EAAOQ,mBAAqB,WACA,OAAtBxB,KAAKW,eACPX,KAAKW,aAAa0C,SAClBrD,KAAKW,aAAe,OAIxBK,EAAO4B,aAAe,SAAsBU,EAAWC,GAIrDA,EAAWvD,KAAKwD,gBAAgBD,GAChCvD,KAAKgC,SAASsB,EAAWC,IAG3BvC,EAAOwC,gBAAkB,SAAyBD,GAChD,IAAIE,EAASzD,KAET0D,GAAS,EAcb,OAZA1D,KAAKW,aAAe,SAAUgD,GACxBD,IACFA,GAAS,EACTD,EAAO9C,aAAe,KACtB4C,EAASI,KAIb3D,KAAKW,aAAa0C,OAAS,WACzBK,GAAS,GAGJ1D,KAAKW,cAGdK,EAAOgC,gBAAkB,SAAyBrB,EAASiC,GACzD5D,KAAKwD,gBAAgBI,GACrB,IAAIC,EAAO7D,KAAKJ,MAAMwC,QAAUpC,KAAKJ,MAAMwC,QAAQ0B,QAAUzB,IAASC,YAAYtC,MAC9E+D,EAA0C,MAAXpC,IAAoB3B,KAAKJ,MAAMoE,eAElE,GAAKH,IAAQE,EAAb,CAKA,GAAI/D,KAAKJ,MAAMoE,eAAgB,CAC7B,IAAIC,EAAQjE,KAAKJ,MAAMwC,QAAU,CAACpC,KAAKW,cAAgB,CAACkD,EAAM7D,KAAKW,cAC/D4B,EAAY0B,EAAM,GAClBC,EAAoBD,EAAM,GAE9BjE,KAAKJ,MAAMoE,eAAezB,EAAW2B,GAGxB,MAAXvC,GACFwC,WAAWnE,KAAKW,aAAcgB,QAb9BwC,WAAWnE,KAAKW,aAAc,IAiBlCK,EAAOoD,OAAS,WACd,IAAI1D,EAASV,KAAKS,MAAMC,OAExB,GA1WmB,cA0WfA,EACF,OAAO,KAGT,IAAI2D,EAAcrE,KAAKJ,MACnB0E,EAAWD,EAAYC,SAgBvBC,GAfMF,EAAY/D,GACF+D,EAAY7D,aACX6D,EAAY9D,cACnB8D,EAAYnE,OACbmE,EAAYjE,MACbiE,EAAY3C,KACT2C,EAAY1C,QACL0C,EAAYL,eACnBK,EAAYvB,QACTuB,EAAYtB,WACbsB,EAAYxB,UACfwB,EAAYnB,OACTmB,EAAYlB,UACbkB,EAAYjB,SACbiB,EAAYjC,QACVoC,YAA8BH,EAAa,CAAC,WAAY,KAAM,eAAgB,gBAAiB,SAAU,QAAS,OAAQ,UAAW,iBAAkB,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,aAEjP,OAGE7E,IAAMiF,cAAcC,EAAuBC,SAAU,CACnDC,MAAO,MACc,oBAAbN,EAA0BA,EAAS5D,EAAQ6D,GAAc/E,IAAMqF,aAAarF,IAAMsF,SAASC,KAAKT,GAAWC,KAIlH7E,EAzSqB,CA0S5BF,IAAMwF,WA4LR,SAASC,KA1LTvF,EAAWwF,YAAcR,EACzBhF,EAAWyF,UAuLP,GAIJzF,EAAW0F,aAAe,CACxB9E,IAAI,EACJE,cAAc,EACdD,eAAe,EACfL,QAAQ,EACRE,OAAO,EACPsB,MAAM,EACNoB,QAASmC,EACTlC,WAAYkC,EACZpC,UAAWoC,EACX/B,OAAQ+B,EACR9B,UAAW8B,EACX7B,SAAU6B,GAEZvF,EAAW2F,UAvlBY,YAwlBvB3F,EAAW4F,OAvlBS,SAwlBpB5F,EAAW6F,SAvlBW,WAwlBtB7F,EAAW8F,QAvlBU,UAwlBrB9F,EAAW+F,QAvlBU,UAwlBN/F,Q,OC5lBR,SAASgG,EAAgBpB,EAAUqB,GACxC,IAIIC,EAASC,OAAOC,OAAO,MAO3B,OANIxB,GAAUQ,WAASiB,IAAIzB,GAAU,SAAU0B,GAC7C,OAAOA,KACNC,SAAQ,SAAUC,GAEnBN,EAAOM,EAAMC,KATF,SAAgBD,GAC3B,OAAOP,GAASS,yBAAeF,GAASP,EAAMO,GAASA,EAQnCG,CAAOH,MAEtBN,EAkET,SAASU,EAAQJ,EAAOK,EAAM3G,GAC5B,OAAsB,MAAfA,EAAM2G,GAAgB3G,EAAM2G,GAAQL,EAAMtG,MAAM2G,GAclD,SAASC,EAAoBC,EAAWC,EAAkBtD,GAC/D,IAAIuD,EAAmBjB,EAAgBe,EAAUnC,UAC7CA,EA/DC,SAA4BsC,EAAMC,GAIvC,SAASC,EAAeX,GACtB,OAAOA,KAAOU,EAAOA,EAAKV,GAAOS,EAAKT,GAJxCS,EAAOA,GAAQ,GACfC,EAAOA,GAAQ,GAQf,IAcIE,EAdAC,EAAkBnB,OAAOC,OAAO,MAChCmB,EAAc,GAElB,IAAK,IAAIC,KAAWN,EACdM,KAAWL,EACTI,EAAYE,SACdH,EAAgBE,GAAWD,EAC3BA,EAAc,IAGhBA,EAAYG,KAAKF,GAKrB,IAAIG,EAAe,GAEnB,IAAK,IAAIC,KAAWT,EAAM,CACxB,GAAIG,EAAgBM,GAClB,IAAKP,EAAI,EAAGA,EAAIC,EAAgBM,GAASH,OAAQJ,IAAK,CACpD,IAAIQ,EAAiBP,EAAgBM,GAASP,GAC9CM,EAAaL,EAAgBM,GAASP,IAAMD,EAAeS,GAI/DF,EAAaC,GAAWR,EAAeQ,GAIzC,IAAKP,EAAI,EAAGA,EAAIE,EAAYE,OAAQJ,IAClCM,EAAaJ,EAAYF,IAAMD,EAAeG,EAAYF,IAG5D,OAAOM,EAoBQG,CAAmBd,EAAkBC,GAmCpD,OAlCAd,OAAO4B,KAAKnD,GAAU2B,SAAQ,SAAUE,GACtC,IAAID,EAAQ5B,EAAS6B,GACrB,GAAKC,yBAAeF,GAApB,CACA,IAAIwB,EAAWvB,KAAOO,EAClBiB,EAAWxB,KAAOQ,EAClBiB,EAAYlB,EAAiBP,GAC7B0B,EAAYzB,yBAAewB,KAAeA,EAAUhI,MAAMU,IAE1DqH,GAAaD,IAAWG,EAQhBF,IAAWD,GAAYG,EAMxBF,GAAWD,GAAWtB,yBAAewB,KAI9CtD,EAAS6B,GAAOtB,uBAAaqB,EAAO,CAClC9C,SAAUA,EAAS0E,KAAK,KAAM5B,GAC9B5F,GAAIsH,EAAUhI,MAAMU,GACpBoB,KAAM4E,EAAQJ,EAAO,OAAQO,GAC7BrG,MAAOkG,EAAQJ,EAAO,QAASO,MAXjCnC,EAAS6B,GAAOtB,uBAAaqB,EAAO,CAClC5F,IAAI,IAVNgE,EAAS6B,GAAOtB,uBAAaqB,EAAO,CAClC9C,SAAUA,EAAS0E,KAAK,KAAM5B,GAC9B5F,IAAI,EACJoB,KAAM4E,EAAQJ,EAAO,OAAQO,GAC7BrG,MAAOkG,EAAQJ,EAAO,QAASO,SAoB9BnC,ECjIT,IAAIyD,EAASlC,OAAOkC,QAAU,SAAUC,GACtC,OAAOnC,OAAO4B,KAAKO,GAAKjC,KAAI,SAAUkC,GACpC,OAAOD,EAAIC,OAyBXC,EAA+B,SAAUvI,GAG3C,SAASuI,EAAgBtI,EAAOC,GAC9B,IAAIC,EAIAqI,GAFJrI,EAAQH,EAAiBI,KAAKC,KAAMJ,EAAOC,IAAYG,MAE9BmI,aAAaL,KC5C3B,SAAgCM,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDuCsCE,CAAuBxI,IAUlE,OAPAA,EAAMW,MAAQ,CACZ8H,aAAc,CACZpI,YAAY,GAEdgI,aAAcA,EACdK,aAAa,GAER1I,EAjBTc,YAAesH,EAAiBvI,GAoBhC,IAAIqB,EAASkH,EAAgBjH,UAqE7B,OAnEAD,EAAOE,kBAAoB,WACzBlB,KAAKyI,SAAU,EACfzI,KAAKgC,SAAS,CACZuG,aAAc,CACZpI,YAAY,MAKlBa,EAAOO,qBAAuB,WAC5BvB,KAAKyI,SAAU,GAGjBP,EAAgBrH,yBAA2B,SAAkC4F,EAAW3F,GACtF,IDiBmClB,EAAOwD,ECjBtCsD,EAAmB5F,EAAKwD,SACxB6D,EAAerH,EAAKqH,aAExB,MAAO,CACL7D,SAFgBxD,EAAK0H,aDeY5I,ECbc6G,EDaPrD,ECbkB+E,EDcvDzC,EAAgB9F,EAAM0E,UAAU,SAAU4B,GAC/C,OAAOrB,uBAAaqB,EAAO,CACzB9C,SAAUA,EAAS0E,KAAK,KAAM5B,GAC9B5F,IAAI,EACJJ,OAAQoG,EAAQJ,EAAO,SAAUtG,GACjCQ,MAAOkG,EAAQJ,EAAO,QAAStG,GAC/B8B,KAAM4E,EAAQJ,EAAO,OAAQtG,SCpB6C4G,EAAoBC,EAAWC,EAAkByB,GAC3HK,aAAa,IAKjBxH,EAAOmH,aAAe,SAAsBjC,EAAOrC,GACjD,IAAI6E,EAAsBhD,EAAgB1F,KAAKJ,MAAM0E,UACjD4B,EAAMC,OAAOuC,IAEbxC,EAAMtG,MAAMwD,UACd8C,EAAMtG,MAAMwD,SAASS,GAGnB7D,KAAKyI,SACPzI,KAAKgC,UAAS,SAAUvB,GACtB,IAAI6D,EAAWqE,YAAS,GAAIlI,EAAM6D,UAGlC,cADOA,EAAS4B,EAAMC,KACf,CACL7B,SAAUA,QAMlBtD,EAAOoD,OAAS,WACd,IAAIC,EAAcrE,KAAKJ,MACnBoF,EAAYX,EAAYuE,UACxBC,EAAexE,EAAYwE,aAC3BjJ,EAAQ4E,YAA8BH,EAAa,CAAC,YAAa,iBAEjEkE,EAAevI,KAAKS,MAAM8H,aAC1BjE,EAAWyD,EAAO/H,KAAKS,MAAM6D,UAAUyB,IAAI8C,GAK/C,cAJOjJ,EAAMM,cACNN,EAAMQ,aACNR,EAAM8B,KAEK,OAAdsD,EACkBxF,IAAMiF,cAAcC,EAAuBC,SAAU,CACvEC,MAAO2D,GACNjE,GAGe9E,IAAMiF,cAAcC,EAAuBC,SAAU,CACvEC,MAAO2D,GACO/I,IAAMiF,cAAcO,EAAWpF,EAAO0E,KAGjD4D,EA1F0B,CA2FjC1I,IAAMwF,WAERkD,EAAgB/C,UAyDZ,GACJ+C,EAAgB9C,aA5KG,CACjBwD,UAAW,MACXC,aAAc,SAAsB3C,GAClC,OAAOA,IA0KIgC,Q,sWE5HR,IAAMY,EAA6B,CACxCC,KAAM,IADkC,IAExCC,UAAW,IAF6B,IAIxCC,GAJwC,cAOtC,OAFAjJ,KAAA,aAAwBA,KAAK+I,KAAKG,IAAIvF,EAAtC,IACA3D,KAAA,oBACA,MAGFmJ,IAVwC,cAWtC,KAAc,CACZ,IAAMC,EAAKpJ,KAAK+I,KAAKM,IAAI1F,GAAd,QAA6B,SAAAyF,GAAE,OAAIA,IAAJ,KAE1C,OADApJ,KAAA,cACA,KAGF,OADAA,KAAA,eACA,MAGFsJ,WApBwC,YAqBtC,IAAMC,EAASvJ,KAAKgJ,UAAUK,IAA9B,GAMA,OALA,IACEE,WAAe,mBAAsBC,aAAtB,MACfxJ,KAAA,qBAGF,MAWFyJ,KAtCwC,Y,kCAsClBC,uDACpB1J,KAAA,aACEA,KAAK+I,KAAKM,IAAI1F,GAAd,SAA8B,YAC5B,IAAMgG,EAAQxF,YAAW,WAEvBZ,oBAFF,GAKA,oBAA6B,kBAA7B,IACA,gC,SC3GQqG,EAAMC,GACpB,MAAoB,kBAANA,IAAmBC,MAAjC,GAGF,SAAgBC,EAAOF,GACrB,yBAAcA,EAGhB,SAAgBG,EAAMH,GACpB,wBAAcA,EAGhB,SAAgBI,EAAKJ,GACnB,0BAAcA,EAGhB,SAAgBK,EAAeL,GAC7B,MAAoB,kBAANA,EAAiBA,EAA/B,KAOF,SAAgBM,EAAWC,GACzB,OAAOA,OAAP,EAaK,IAAMC,IACO,qBAAXC,SACPA,OADA,WAEAA,gBAHK,eAMP,SAAgBC,EAAiBC,GAC/B,OACEpE,6BAA2B4D,EAA3B5D,IAA6C6D,EAA7C7D,IAA8DwD,EADhE,GCxCK,IAAMa,EAAW,CACtBC,SADsB,WAEtBC,UAFsB,YAGtBC,WAHsB,aAItBC,YAJsB,cAKtBC,aALsB,eAMtBC,cAAe,iBAGJC,EAAO,CAClBC,KADkB,OAElBC,QAFkB,UAGlBC,QAHkB,UAIlBC,MAJkB,QAKlBC,QALkB,UAMlBC,KAAM,Q,SCqBQC,K,IAQd,IAPAnL,UACAsB,S,IACA8J,oBAAWA,EAAA,M,IACXC,0BAAiBA,GAAA,E,IACjBC,oBAAWA,GAAA,E,IACXC,4BAAmBA,EAAnBA,MAUA,OANIC,kBAAJ,IAA+BJ,UAC5BK,EAA+BL,EADoB,GACpCM,EAAgBN,EADoB,IAGpDK,EAAgBC,EAAhBD,EAGK,SAAyB,G,IAC9BvH,aACAyH,aACAC,0BACAC,SACGrM,8DAEGsM,EAAiBT,EAAoBrL,EAAN,OAArC,EACM+L,EAAgBV,EAAoB/J,EAAN,OAApC,EAmBM0K,EAAkB,SAAlBA,IACJ,IAAMvI,EAAOjE,UAAb,QACA,KCrFN,SACEiE,EACAoI,EACAT,uBAEA,IAAMa,EAASxI,EAAf,aACMyI,EAAQzI,EAAd,MAEA,aACEA,yCACAoI,IAGFM,uBAAsB,WACpBD,sBACAA,SAAeD,EAAfC,KACAA,2BAEAC,uBAAsB,WACpBD,aACAA,cACAA,gBAEFzI,yCD+DI2I,CAAc3I,EAAMoI,EAApBO,GACA3I,0CAgBJ,OACE,2CACMjE,GACJ+B,QACEqK,EAAqB,EAEjB,CACE5L,MADF,EAEEsB,KAAMgK,EAAWI,EAAH,EAAqCA,GAG3DhJ,QAhDY,WACd,IAAMe,EAAOjE,UAAb,QACA,IACEiE,mBACAA,qCACAA,0BAAkCgI,EAAlChI,OA4CAhB,UAxCc,WAChB,IAAMgB,EAAOjE,UAAb,QACA,IACEiE,sBACAA,qBAqCAX,OAAQ8I,EAAwBC,EAzBrB,WACb,IAAMpI,EAAOjE,UAAb,QACA,IACEiE,mBACAA,qCACAA,0BAAkCiI,EAAlCjI,KACA6H,EACI7H,kCADI,GAEJoI,MAkBJ1L,eAAa,IAdjB,I,SEnGYkM,K,IACdC,eACAC,S,IACAC,qBAAYA,EAAA,UAEZ,OACE,kCACEC,UAAc,kDAA+EF,EAC7FA,KAAK,SACLG,QAAS,SAAAC,GACPA,oBACAL,M,aAEUE,GAEZ,+B,cAAiB,OAAOI,QAAQ,aAC9B,gCACEC,SAAS,UACTC,EAAE,+H,SCmCIC,K,QACdC,UACAC,cACAX,eACAC,SACAW,SACAT,cACOU,IAAPjB,MACAkB,uBACAC,aACAC,QACAC,SAEMrB,EAAK,cAETsB,kBAAsBR,EAFb,KAGTS,mBAAoBR,EAAY,UAHvB,SAITS,QAASR,EAAO,EAAI,IAGtB,IAAwBhB,6BAExB,IAAMyB,EAAaC,IACd,yBACHR,EACO,qCACA,mCACJ,2BALgB,UAOb,+BAPa,KAArB,GAeMS,IAAc,MACjBT,GAAsBC,GAAtBD,oBADiB,kBAIhBA,GAAsBC,EAAtBD,OAEI,WACEG,GAAQjB,KAPlB,GAWA,OAAOlN,6CAAKqN,UAAWkB,EAAYzB,MAAOA,GAA1C,IAGFa,eAA2B,CACzBR,KAAM3B,EADmB,QAEzBsC,MAAM,GC3GD,IAAMY,EAA8B,SAAAtO,G,QC6B3C,SAAyBA,G,MACWuO,oBAAS,GAApCd,OAAWe,O,EACwCD,oBAAS,GAA5DnC,OAAuBqC,OACxBC,EAAWC,iBAAjB,MACMC,EAAOC,GAAqB,CAChCC,MADgC,EAEhCC,EAFgC,EAGhCC,EAHgC,EAIhCC,OAJgC,EAKhCC,gBALgC,EAMhCC,iBANgC,EAOhCC,SAPgC,EAQhCC,aAAc,OAEVC,EAAYT,GAAU7O,GAA5B,GACQuP,EAA+DvP,EAA/DuP,UAAWC,EAAoDxP,EAApDwP,aAAc1C,EAAsC9M,EAAtC8M,WAAYI,EAA0BlN,EAA1BkN,QAASuC,EAAiBzP,EAAjByP,aA4BtD,cAGE,IAAMC,EAAQhB,EAAd,QACAE,qBACAA,aACAA,eAAoBc,EAApBd,wBACAc,sBACAd,QAAaA,IAASe,GAAKxC,EAA3ByB,aACAA,kBAAuBc,eAAqB1P,mBAA5C4O,KAGF,aACE,GAAIA,EAAJ,aAAuB,OACgBA,EADhB,aACbgB,EADa,MACRC,EADQ,SACAC,EADA,OACMC,EADN,QAInB/P,gBACA4O,KADA5O,GAEA4O,KAFA5O,GAGA4O,KAHA5O,GAIA4O,KALF,EAOEoB,IAEAC,KAKN,aACEzB,MAGF,aACEA,MA6BF,cACE,IAAMkB,EAAQhB,EAAd,QAEIE,EAAJ,UACE,GAAeoB,IAEfpB,IAASe,GAATf,GACAA,SAAcA,IAASA,EAAvBA,MACAA,IAzHN,SAAczB,GACZ,OAAOA,iBAAmBA,wBAAnBA,EACHA,mBADGA,QAEHA,EAFJ,QAwHa+C,CALO,GAQZtB,UAAeA,EAAnB,IAA2BA,sBAE3Bc,gCAAsCd,EAAtCc,aACAA,oBAAyB,EACvBS,SAASvB,SAAcA,EADzBc,mBAKJ,aACE,IAAMA,EAAQhB,EAAd,QACA,GAAIE,EAAJ,QAAkB,CAGhB,GAFAA,aAEIuB,SAASvB,EAATuB,QAAwBvB,EAA5B,gBAGE,OAFAH,WACAzO,eAIF0P,kDACAA,kCACAA,qBA1HJU,qBAAU,WAIR,OAHI/F,EAAKrK,EAAT,SACEA,SAAawG,yBAAexG,EAAfwG,WAAkCxG,WAA/CA,OAEK,WACDqK,EAAKiF,EAAT,UACEA,UACE9I,yBAAe8I,EAAf9I,WAAsC8I,WADxCA,UANNc,IAYAA,qBAAU,WAER,OADApQ,cA8DAqQ,yCACAA,uCAEAA,yCACAA,yCAjEO,WACLrQ,cAoEFqQ,4CACAA,0CAEAA,4CACAA,+CAtEC,CAACrQ,EALJoQ,YAOAA,qBAAU,WAER,OADApQ,qBA6CA0K,mCACAA,mCA7CO,WACL1K,qBAgDF0K,sCACAA,yCA/CC,CAAC1K,EALJoQ,mBA2GA,IAAME,EAA4C,CAChDC,YADgD,EAEhDC,aAFgD,EAGhDC,UAHgD,EAIhDC,WAAYC,GAGVpB,GAAJ,IACEe,iBACAA,kBAIF,IACEA,UAAwB,YACtBpD,GAAWA,EAAXA,GACA0B,mBAAwB9B,MAI5B,MAAO,CACLmD,UADK,EAELD,WAFK,EAGLvC,UAHK,EAILrB,sBAJK,EAKLsC,SALK,EAML4B,iBDhMEM,CAAS5Q,GAJXyN,cACArB,0BACAsC,aACA4B,kBAGAO,EAqBE7Q,EArBF6Q,YACAnM,EAoBE1E,EApBF0E,SACA6K,EAmBEvP,EAnBFuP,UACArC,EAkBElN,EAlBFkN,QACAH,EAiBE/M,EAjBF+M,KACA+D,EAgBE9Q,EAhBF8Q,gBACAhE,EAeE9M,EAfF8M,WACYhN,EAcVE,EAdF+Q,WACA5E,EAaEnM,EAbFmM,SACAc,EAYEjN,EAZFiN,UACAP,EAWE1M,EAXF0M,MACAsE,EAUEhR,EAVFgR,cACAC,EASEjR,EATFiR,UACAC,EAQElR,EARFkR,kBACAC,EAOEnR,EAPFmR,cACAC,EAMEpR,EANFoR,SACAC,EAKErR,EALFqR,KACAxD,EAIE7N,EAJF6N,SACAC,EAGE9N,EAHF8N,IACAtD,EAEExK,EAFFwK,QACA8G,EACEtR,EADFsR,YAEIC,EAAanD,IACd,kBACA,oBAFgB,UAIb,wBAJa,KAArB,GAQMR,IAAN,EAWA,OACE,2BACElN,GAAIV,EAAK,GACTM,QAAM,EACN+L,KAAMiF,EACNnF,SAAUA,EACVC,sBAAuBA,EACvB5J,QAASkM,GAET,6CACE8C,GAAIhH,EACJ0C,QAASA,EACTD,UAAWsE,GACPjB,GACJ5D,MAAOA,EACP+E,IAAK/C,IAEL,+CACO1O,EAAK,IAAO,CAAEqR,KAAMA,GAAR,CACjBpE,UAAWmB,IAAM,uBAAJ,GACb1B,MAAOuE,IAXX,GAlBJ,YACE,MAAkB,OAAO,KAEzB,IAAMjR,EAAQ,CAAE8M,WAAF,EAAcC,QAC5B,OAAI1C,EAAJ,GAA8BwG,EAAP,GACnBjR,yBAAJ,GACSA,yBAAP,QADF,EA4BK8R,CAfH,IAgBInC,GAAD,IACC,2CACO6B,IAAA,EACD,CAAE7K,IAAK,MAAM6K,GACb,IACJtD,IAAKA,EACLN,MAAO+B,EACP9B,UAAWA,EACXM,KAAM/N,EAAK,GACX8M,WAAYA,EACZY,KAAMoD,EACN/D,KAAMA,EACNL,MAAOyE,EACPlE,UAAWiE,EACXtD,mBAAoBA,EACpBC,SAAUA,QE/FhB8D,EAAShG,EAAc,CAC3BnL,MAAU,yBACVsB,KAAS,wBACT+J,gBAAgB,ICAL+F,EAAkD,SAAC,G,IAC9DlN,aACAuI,cACAP,UACGmF,wCAMH,cAFOA,EAAI,GAGT,+BAAK5E,UAAWA,EAAYP,MAAOA,GAChC,kBAA6B,SAAApG,GAAK,OACjC1G,yBADiC,QCJ5BkS,EAAgD,SAAA9R,G,eCsC3BA,G,MACN+R,qBAAWC,GAAS,IAAvCtC,OAAOuC,OACRC,EAAevD,iBAArB,MACIwD,EAAatD,GAAjB,GACIuD,EAAQvD,GAAZ,IACMwD,EAAaxD,GAAnB,IACMyD,EAAWzD,GAA6B,CAC5C0D,SAD4C,EAE5CC,eAF4C,EAG5CxS,MAH4C,EAI5CyS,YAJ4C,KAK5CC,cAL4C,EAM5CC,SAAU,SAAAnB,GAAE,OAAIa,MAAJ,QAyBd,cACE,WAAO3C,aAGT,c,IAA6B+C,gB,EACaH,EAAStS,MAAzC4S,UAAOC,yBAEbD,KACEH,GACCH,mBAHL,KAKEH,GAAcC,EAAdD,OACAC,MAIJ,cACE,IAAMU,EAAWV,EAAjB,OAOA,IANAD,EAAa5H,KACT4H,EADS5H,EAET4H,EAAaG,EAFjBH,gBAIA,IAAoBA,KAEhBW,EAAJ,EAAkB,CAChB,IAAMC,EAAWxI,OAA0B+H,QAA3C,MAEA,GAAIQ,OAAJ,IAAsBC,EACpBT,mBACAU,QACK,CACL,IAAMC,EAAYF,MAAlB,EACAT,mBAEA,IAAK,IAAInL,EAAT,EAAgBA,EAAhB,EAA+BA,IAAK6L,KAGxCf,EAAS,CAAElF,KAAF,SAAkBvC,YAG7B,a,MACgD4H,UAAtCc,iBAAcC,eAAYC,YAGlC7O,YAAW,WACT8O,EAAYH,EAAcC,EAA1BE,KADF9O,KAwBF,gB,IAEIiJ,UAAO4F,YAAYE,2BAErB,GAAK3I,EAAD,KAlBN,Y,IACE8H,gBACAjI,YACA4G,aAEA,UAAQc,EAAD,SACJI,8BACCG,IAAgBH,QAFb,aAGJA,oBAHI,MAG+BlB,GAUPmC,CAA/B,I,IAEQ/I,EAAsB8I,EAAtB9I,QAAS4G,EAAakC,EAAblC,SACTpR,EAAyBsS,EAAzBtS,MACF8M,EAAa,kBAAM0G,EAAN,IACbC,IAAiBf,EAFUJ,EAAlBI,eAEf,GAEA,GAAmBP,IAEnB,IXxIFuB,EACAC,EWuIQR,EAAyB,CAC7B3I,QAD6B,EAE7B4G,SAF6B,EAG7B7K,IAAK+M,OAAehB,EAHS,WAI7BvF,KAAMuG,EAJuB,KAK7BxG,WAL6B,EAM7B+D,YAAayC,EANgB,YAO7BxF,IAAK9N,EAPwB,IAQ7BmM,SAAUmH,YAAqBtT,EARF,SAS7B+Q,WAAYuC,cAAuBtT,EATN,WAU7BiN,UAAW3C,EAAegJ,aAAqBtT,EAVlB,gBAW7BgR,cAAe1G,EACbgJ,iBAAyBtT,EAZE,eAc7B0M,MAAO4G,SAAiBtT,EAdK,WAe7BiR,UAAWqC,aAAqBtT,EAfH,UAgB7BkN,QAASoG,WAAmBtT,EAhBC,QAiB7BwP,aAAcrF,EAAOmJ,EAAPnJ,cACVmJ,EADUnJ,aAEVnK,EAnByB,aAoB7B4T,iBAAkBzJ,EAAOmJ,EAAPnJ,kBACdmJ,EADcnJ,iBAEdnK,EAtByB,iBAuB7B6T,UAAW1J,EAAOmJ,EAAPnJ,WACPmJ,EADOnJ,UAEPnK,EAzByB,UA0B7B8T,iBAAkB9J,EAAMsJ,EAANtJ,kBACdsJ,EADctJ,iBAEbhK,EA5BwB,iBA6B7ByP,aAActF,EAAOmJ,EAAPnJ,cACVmJ,EADUnJ,aAEVnK,EA/ByB,aAgC7BkR,kBAAmB5G,EACjBgJ,qBAA6BtT,EAjCF,mBAmC7BmR,cAAemC,iBAAyBtT,EAnCX,cAoC7BuP,WX5KJmE,EW4KiCJ,EAAD,UX3KhCK,EW2KoD3T,EApCnB,WXrI1B0T,OACJ1J,MAAyB0J,EADrBA,IAAP,GW0KI5C,gBAAiB3G,EAAOmJ,EAAPnJ,iBACbmJ,EADanJ,gBAEbnK,EAvCyB,gBAwC7B6N,SAAUyF,EAxCmB,SAyC7BjC,KAAMjH,EAAMkJ,EAANlJ,MAAsBkJ,EAAtBlJ,KAAqCpK,EAzCd,KA0C7BsR,YA1C6B,YAyGjC,mBACSe,EAAP,GA/DI0B,MAIA1J,EAAKiJ,EAAT,UAA0BH,SAAoBG,EAApBH,QACtB9I,EAAKiJ,EAAT,WAA2BH,UAAqBG,EAArBH,SAE3B,IAAItC,EAAc7Q,EAAlB,aAEIsT,mBAAiC3I,EAAc2I,EAAnD,aACEzC,EAAcyC,EAAdzC,aACK,IAAIyC,gBACTzC,GAAclG,EAAc3K,EAAd2K,cAAmC3K,EAAnC2K,aAGhBwI,gBAEA,IAAID,EAAJ,EAEI1M,8BAA4B4D,EAAMQ,EAAtC,MACEsI,EAAejO,uBAAa2F,EAAS,CACnCkC,eAEOzC,EAAJ,KACL6I,EAAetI,EAAQ,CAAEkC,gBAKzB9M,SACAA,QADAA,GAEAmS,EAAanS,EAFbA,OADF,EAMEoS,OAAW,CAAEc,aAAF,EAAgBC,WAAhB,EAA4BC,YAC9BpJ,MAAiBwD,EAArB,EACLjJ,YAAW,WACT8O,EAAYH,EAAcC,EAA1BE,KADF9O,GAIA8O,EAAYH,EAAcC,EAA1BE,IAIJ,kB,IAKU7I,EAAY2I,EAAZ3I,QAER6H,KAAsB,CACpBzH,QADoB,EAEpB5K,MAAOmT,GAETlB,EAAS,CACPlF,KADO,MAEPvC,QAFO,EAGP4I,YAQJ,cAQE,IALA,IAAMY,EAAN,GACMC,EAAYjU,cACdiG,eADcjG,UAEdiG,YAFJ,GAISkB,EAAT,EAAgBA,EAAI8M,EAApB,OAAsC9M,IAAK,CACzC,IAAMuI,EAAQ2C,EAAW4B,EAAzB,IACQ9H,EAAauD,EAFoB,eAGzCsE,OAA4BA,KAA5BA,IAEAA,aAGF,OAAQ/N,OAAA,aAAwD,SAAAiO,GAAC,OAC/D1K,EAAG0K,EAAGF,EADyD,OAKnE,OAzOA5D,qBAAU,WASR,OARAkC,cAAuBtS,EAAvBsS,YACApJ,8BAGmB,SAAAsB,GAAO,OAAI0H,WAAwBsB,EAA5B,MAH1BtK,kBAOO,kBAAMA,EAAA,OAAN,MATTkH,IAYAA,qBAAU,WACRkC,kBACAA,iBAA0B5C,EAA1B4C,OACApJ,SAAgCwG,EAAhCxG,OAA8ClJ,EAA9CkJ,eACC,CAJHkH,IAMAA,qBAAU,WACRkC,aAsNK,CACL6B,iBADK,EAEL9B,WAFK,EAGLH,aAHK,EAILQ,iBDjSwD0B,CAAkB,GAApED,qBAAkBjC,iBAAcQ,kBAGhCzF,EAAuCjN,EAAvCiN,UAAWP,EAA4B1M,EAA5B0M,MAAOoB,EAAqB9N,EAArB8N,IAAK2E,EAAgBzS,EAAhByS,YAE/B,OACE,+BACEhB,IAAKS,EACLjF,UAAW,WACXuE,GAAIiB,GAEJ,2BAAiBzJ,UAAW,MACzBmL,GAAiB,c,MACVE,EAAO,CACXpH,UAAWmB,IACN,4BACA,8BAFQ,UAGL,kCAHK,KAIX9D,EALS,IAOXoC,MACE,IAAAuH,EAAA,qBACgBK,cAAe,SAD/B,SAKJ,OACE,2CAAqBD,GAAM9N,IAAG,aAAe4F,IAC1C8H,EAAA,KAAc,Y,IAAGrJ,YAAgBuI,IAAPnT,MACzB,OACE,2CACMmT,GACJzS,GAAIgS,EAAcS,EAAD,SACjB5M,IAAG,SAAW4M,EAAW5M,IACzBsK,aACEsC,oBAEIA,EAAWtC,cARrB,aA4DhBiB,eAA8B,CAC5B3F,SAAUtB,EADkB,UAE5BkG,WAF4B,EAG5BjD,KAH4B,EAI5ByB,UAJ4B,IAK5BuB,iBAL4B,EAM5BD,YAN4B,EAO5BrB,cAP4B,EAQ5BoE,kBAR4B,EAS5BnE,cAT4B,EAU5B8E,aAV4B,EAW5BV,WAX4B,EAY5BC,iBAZ4B,GAa5BzC,KAAM,SE7FR,IACA,EACA,EACA,EAHImD,EAAa,IAAjB,IAIIpC,EAAJ,GACIqC,GAAJ,EAKA,SAASC,IACP,OAAOF,OAAP,EAcF,SAAS7B,EAASnI,EAAlB,G,IACQmK,EATR,SAAsBlC,GACpB,OAAKiC,IACEF,MAAgB/B,GAAcmC,GADA,KAQnBC,CADapC,eAE/B,SAEOkC,WAAP,GAFuB,KAQzB,SAASG,IACP,OAAQ3E,2BAA6B4E,oBAA9B,cAAP,IAMF,SAASC,EAAW1B,GAClB,OAAIA,IAAYlJ,EAAMkJ,EAANlJ,UAA0BJ,EAAMsJ,EAAhD,UACSA,EAAP,QAGKwB,IAOT,SAASG,EAAc,EAAvB,GAgBE,OAZIP,IACFxL,eAEAkJ,OAAW,CAAExH,QAAF,EAAW0I,YAClBmB,GAAJ,IACEA,KACAS,EAAmB7E,uBAAnB6E,OACA7E,6BACA7L,iBAAO5E,2CAAD,IAAN4E,KAIG8O,EAAP,QAMF,SAAS6B,GAAapI,EAAtB,GACE,qBAEEA,KAAOuG,GAAWA,EAAZ,MAFR,EAGE9I,QAASwK,EAAW1B,KAIxB,IAAM5D,GAAQ,SAAC9E,EAAD,UACZqK,EAAcrK,EAASuK,GAAa/J,EAAD,QADvB,KCnGd,SAAgByD,GAAauG,EAAQC,mBAAU,GAC7C,IAAM5D,EAAM9C,iBAAZ,GAMA,OAJAyB,qBAAU,WACR,IAAaqB,gBAGRA,EAAP,Q,SCNcO,GAAQnR,EAAcyU,GACpC,OAAQA,EAAR,MACE,UACE,MAAO,aAAWA,EAAX,kBAAkC,SAAA9D,GAAE,OAAIA,IAAO8D,EAAX,WAC7C,aACE,OAAO/K,EAAW+K,EAAX,SACHzU,EAAA,QAAa,SAAA2Q,GAAE,OAAIA,IAAO8D,EAAX,WADnB,IPWN,SAAS3F,GAAKxC,GACZ,OAAOA,iBAAmBA,wBAAnBA,EACHA,mBADGA,QAEHA,EAFJ,QKoFFuC,WAAgB,qBACduF,EAAcrK,EAASuK,GAAa/J,EAAD,QADrB,KAGhBsE,QAAa,qBACXuF,EAAcrK,EAASuK,GAAa/J,EAAD,KADxB,KAGbsE,SAAc,qBACZuF,EAAcrK,EAASuK,GAAa/J,EAAD,MADvB,KAGdsE,WAAgB,qBACduF,EAAcrK,EAASuK,GAAa/J,EAAD,QADrB,KAGhBsE,QAAa,qBACXuF,EAAcrK,EAASuK,GAAa/J,EAAD,KADxB,KAMbsE,QAAaA,GAAbA,QAKAA,WAAgB,mBACdgF,KAA2BxL,EAAA,OADb,IAMhBwG,qBAA0B,4BAAC6F,MAAD,IACxBb,KAA2BxL,EAAA,OADH,IAM1BwG,YAAiB,YACf,IAAIgD,GAAJ,EAQA,OANA8B,WAAmB,SAAAG,GACbA,iBAA2BA,gBAA/B,KACEjC,SAIJ,GAGFhD,UAAe,mBAAc4D,UAAyB,IAGpD/O,YAAW,WACT,IAAMmL,EAAQiD,EAASnI,EAAvB,GACA,KAAW,KACMgL,EAAoC9F,EAD1C,MAC2B+F,EAAe/F,EAD1C,QAGHgG,EAAc,EAAH,iBAGflL,QAAS8I,WAHM,EAIflC,SAAU0D,MAGRY,YAAJ,IAAqCA,aAErC,IAAM9K,EACJ,qBAAO8K,EAAP,OACIA,EADJ,OADF,SAIOA,EAAP,OAEAT,EAAcrK,EAAdqK,MApBJ1Q,IA4BFmL,QAAa,YACXA,YAAiB,CACf7B,SAAU,KAQd6B,YAAiB,YAIf,OAHIrF,EAAJ,IACEnB,UAEK,WACLmB,MAAkBnB,EAAA,MAAlBmB,KAOJqF,aAAkB,iBAAC3M,UAA8B,IAC/C0R,KACAkB,KAGFjG,cACAA,UAMAxG,QACsB,YAClB0L,EAAiBgB,eAAjBhB,EACAJ,WAEApC,WAAc,SAAAyD,GACZ3M,SAA8B2M,EAA9B3M,QAA4C2M,EAA5C3M,YAGFkJ,QATJlJ,MAWyB,YACrBsL,EAAU,OAAQoB,eAAlBpB,GAEA,IAAIA,QACFtL,uBAMEuB,GAAJ,GACE4F,iC,iCGpPS,SAASyF,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIxO,UAAQyO,EAAMD,EAAIxO,QAE/C,IAAK,IAAIJ,EAAI,EAAG8O,EAAO,IAAIjK,MAAMgK,GAAM7O,EAAI6O,EAAK7O,IAC9C8O,EAAK9O,GAAK4O,EAAI5O,GAGhB,OAAO8O,ECHM,SAASC,EAAeH,EAAK5O,GAC1C,OCLa,SAAyB4O,GACtC,GAAI/J,MAAMmK,QAAQJ,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAK5O,GACjD,GAAsB,qBAAXiP,QAA4BA,OAAOC,YAAYpQ,OAAO8P,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKzU,EAET,IACE,IAAK,IAAiC0U,EAA7BC,EAAKZ,EAAIK,OAAOC,cAAmBE,GAAMG,EAAKC,EAAG1P,QAAQoF,QAChEiK,EAAK9O,KAAKkP,EAAG1R,QAETmC,GAAKmP,EAAK/O,SAAWJ,GAH8CoP,GAAK,IAK9E,MAAOK,GACPJ,GAAK,EACLC,EAAKG,EACL,QACA,IACOL,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAK5O,IGJ3C,SAAqC0P,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAI9Q,OAAO5E,UAAU2V,SAAS7W,KAAK0W,GAAGI,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAYC,MAC7C,QAANJ,GAAqB,QAANA,EAAoB/K,MAAMoL,KAAKL,GACxC,cAANA,GAAqB,2CAA2CM,KAAKN,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2Bf,EAAK5O,IILjF,WACb,MAAM,IAAImQ,UAAU,6IJIgF,G,2EKLtG,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASrJ,IAGR,IAFA,IAAIsJ,EAAU,GAELtQ,EAAI,EAAGA,EAAIuQ,UAAUnQ,OAAQJ,IAAK,CAC1C,IAAIiO,EAAMsC,UAAUvQ,GACpB,GAAKiO,EAAL,CAEA,IAAIuC,SAAiBvC,EAErB,GAAgB,WAAZuC,GAAoC,WAAZA,EAC3BF,EAAQjQ,KAAK4N,QACP,GAAIpJ,MAAMmK,QAAQf,IAAQA,EAAI7N,OAAQ,CAC5C,IAAIqQ,EAAQzJ,EAAW0J,MAAM,KAAMzC,GAC/BwC,GACHH,EAAQjQ,KAAKoQ,QAER,GAAgB,WAAZD,EACV,IAAK,IAAIpR,KAAO6O,EACXmC,EAAOpX,KAAKiV,EAAK7O,IAAQ6O,EAAI7O,IAChCkR,EAAQjQ,KAAKjB,IAMjB,OAAOkR,EAAQK,KAAK,KAGgBC,EAAOC,SAC3C7J,EAAW8J,QAAU9J,EACrB4J,EAAOC,QAAU7J,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP","file":"static/js/6.ebb026b6.chunk.js","sourcesContent":["export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return typeof v === 'string' ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","export type TypeOptions = 'info' | 'success' | 'warning' | 'error' | 'default';\nexport type Positons =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center';\n\nexport const POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n} as const;\n\nexport const TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum DEFAULT {\n  COLLAPSE_DURATION = 300,\n  CSS_NAMESPACE = 'Toastify'\n}\n","import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { DEFAULT } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  let enterDuration: number, exitDuration: number;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    [enterDuration, exitDuration] = duration;\n  } else {\n    enterDuration = exitDuration = duration as number;\n  }\n\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    ...props\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration}ms`;\n      }\n    };\n\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    const onCollapseStart = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        collapseToast(node, done, collapseDuration);\n        node.removeEventListener('animationend', onCollapseStart);\n      }\n    };\n\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration}ms`;\n        collapse\n          ? node.addEventListener('animationend', onCollapseStart)\n          : done();\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? 0\n            : {\n                enter: enterDuration,\n                exit: collapse ? exitDuration + collapseDuration : exitDuration\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? done : onExit}\n        unmountOnExit\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import { DEFAULT } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = DEFAULT.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  function onCollapseEnd() {\n    node.removeEventListener('transitionend', onCollapseEnd);\n    done();\n  }\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n    });\n    node.addEventListener('transitionend', onCollapseEnd);\n  });\n}\n","import * as React from 'react';\nimport { DEFAULT, TypeOptions } from '../utils';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { TYPE, DEFAULT, TypeOptions } from './../utils';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: string | null;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n\n  const classNames = cx(\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    },\n    className\n  );\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { DEFAULT, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast\n  } = props;\n  const cssClasses = cx(\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    className\n  );\n  const controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return null;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in!}\n      appear\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import { DEFAULT, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport { ToastProps } from '../types';\n\ntype ToastPositionerProps = Pick<ToastProps, 'className' | 'style' | 'in'>;\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className!} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, DEFAULT, parseClassName, objectValues } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div\n      ref={containerRef}\n      className={DEFAULT.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      <TransitionGroup component={null}>\n        {getToastToRender((position, toastList) => {\n          const swag = {\n            className: cx(\n              `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n              `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n              { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\n              parseClassName(className)\n            ),\n            style:\n              toastList.length === 0\n                ? { ...style, pointerEvents: 'none' }\n                : { ...style }\n          } as any;\n\n          return (\n            <ToastPositioner {...swag} key={`container-${position}`}>\n              {toastList.map(({ content, props: toastProps }) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    in={isToastActive(toastProps.toastId)}\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </ToastPositioner>\n          );\n        })}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: PropTypes.oneOf(objectValues(POSITION)),\n\n    // @ts-ignore\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n    // @ts-ignore\n    closeButton: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.bool,\n      PropTypes.func\n    ]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport { eventManager, Event } from '../core';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  hasToastId,\n  getAutoCloseDelay\n} from '../utils';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { hasToastId } from '../utils';\n\nexport type State = Array<Id>;\nexport type Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}