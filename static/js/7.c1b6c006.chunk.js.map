{"version":3,"sources":["Page/HomePage/HomePage.js","Helpers/movies-api.js","Components/Movies/Movies.js"],"names":["HomePage","useState","movies","setMovies","isLoading","setLoading","error","setError","useEffect","getTrendingMovies","then","response","catch","finally","toast","className","baseUrl","KEY","a","axios","get","data","results","moviesSearch","query","getMovieDetails","movieId","getMovieCast","cast","getReviews","bigImgLink","smallImgLink","MoviesList","location","useLocation","length","map","id","title","key","to","pathname","state","from"],"mappings":"uLAoCeA,UA7BE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,OAEWF,oBAAS,GAFpB,mBAEdG,EAFc,KAEHC,EAFG,OAGKJ,oBAAS,GAHd,mBAGdK,EAHc,KAGPC,EAHO,KAcrB,OATAC,qBAAU,WACRC,cACGC,MAAK,SAACC,GACLR,EAAUQ,MAEXC,OAAM,SAACN,GAAD,OAAWC,EAASD,MAC1BO,SAAQ,SAACT,GAAD,OAAeC,GAAW,QACpC,IAGD,oCACGC,GAASQ,IAAMR,MAAM,yBACrBF,GAAa,kBAAC,IAAD,MAEbF,IAAWI,IAAUF,GACpB,yBAAKW,WAAS,GACZ,uBAAGA,WAAS,GAAZ,kBAEA,kBAAC,IAAD,CAAYb,OAAQA,Q,4TC5BxBc,EAAU,+BACVC,EAAM,mCAECR,EAAiB,uCAAG,sBAAAS,EAAA,sEAClBC,IACVC,IADU,UACHJ,EADG,uCACmCC,IAC7CP,MAAK,SAAAC,GAAQ,OAAIA,EAASU,KAAKC,WAHH,mFAAH,qDAKjBC,EAAY,uCAAG,WAAMC,GAAN,SAAAN,EAAA,sEACbC,IACVC,IADU,UAENJ,EAFM,iCAE0BC,EAF1B,iCAEsDO,EAFtD,gCAIVd,MAAK,SAAAC,GAAQ,OAAIA,EAASU,KAAKC,WALR,mFAAH,sDAOZG,EAAe,uCAAG,WAAMC,GAAN,SAAAR,EAAA,sEAChBC,IACVC,IADU,UACHJ,EADG,kBACcU,EADd,oBACiCT,EADjC,oBAEVP,MAAK,SAAAC,GAAQ,OAAIA,EAASU,QAHA,mFAAH,sDAKfM,EAAY,uCAAG,WAAMD,GAAN,SAAAR,EAAA,sEACbC,IACVC,IADU,UACHJ,EADG,kBACcU,EADd,4BACyCT,IACnDP,MAAK,SAAAC,GAAQ,OAAIA,EAASU,KAAKO,QAHR,mFAAH,sDAKZC,EAAU,uCAAG,WAAMH,GAAN,SAAAR,EAAA,sEACXC,IACVC,IADU,UAENJ,EAFM,kBAEWU,EAFX,4BAEsCT,EAFtC,2BAIVP,MAAK,SAAAC,GAAQ,OAAIA,EAASU,KAAKC,WALV,mFAAH,sDAQVQ,EAAa,kCACbC,EAAe,kC,gCCpC5B,mCAwBeC,IArBI,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OACd+B,EAAWC,cACjB,OACE,8BACKhC,EAAOiC,QACRjC,EAAOkC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,wBAAIC,IAAKF,GACP,kBAAC,IAAD,CACEG,GAAI,CACFC,SAAS,WAAD,OAAaJ,GACrBK,MAAO,CAAEC,KAAMV,KAGhBK","file":"static/js/7.c1b6c006.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getTrendingMovies } from \"../../Helpers/movies-api\";\r\nimport MoviesList from \"../../Components/Movies/Movies\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getTrendingMovies()\r\n      .then((response) => {\r\n        setMovies(response);\r\n      })\r\n      .catch((error) => setError(error))\r\n      .finally((isLoading) => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {error && toast.error(\"Something went wrong!\")}\r\n      {isLoading && <Loader />}\r\n\r\n      {movies && !error && !isLoading && (\r\n        <div className>\r\n          <p className>Trending today</p>\r\n\r\n          <MoviesList movies={movies} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst KEY = '758852d8d40687fc46ebff7df308c64e';\n\nexport const getTrendingMovies = async () => {\n  return await axios\n    .get(`${baseUrl}/trending/movie/day?api_key=${KEY}`)\n    .then(response => response.data.results);\n};\nexport const moviesSearch = async query => {\n  return await axios\n    .get(\n      `${baseUrl}/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n    )\n    .then(response => response.data.results);\n};\nexport const getMovieDetails = async movieId => {\n  return await axios\n    .get(`${baseUrl}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    .then(response => response.data);\n};\nexport const getMovieCast = async movieId => {\n  return await axios\n    .get(`${baseUrl}/movie/${movieId}/credits?api_key=${KEY}`)\n    .then(response => response.data.cast);\n};\nexport const getReviews = async movieId => {\n  return await axios\n    .get(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n    )\n    .then(response => response.data.results);\n};\n\nexport const bigImgLink = 'https://image.tmdb.org/t/p/w342';\nexport const smallImgLink = 'https://image.tmdb.org/t/p/w92';\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {!!movies.length &&\r\n        movies.map(({ id, title }) => (\r\n          <li key={id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${id}`,\r\n                state: { from: location },\r\n              }}\r\n            >\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n"],"sourceRoot":""}